
/home/Manfred/ics2017/nexus-am/tests/cputest/build/movsx-x86-nemu：     文件格式 elf32-i386


Disassembly of section .text:

00100000 <_start>:
  100000:	bd 00 00 00 00       	mov    $0x0,%ebp
  100005:	bc 00 7c 00 00       	mov    $0x7c00,%esp
  10000a:	e8 0d 00 00 00       	call   10001c <_trm_init>
  10000f:	90                   	nop

00100010 <_halt>:
  100010:	55                   	push   %ebp
  100011:	89 e5                	mov    %esp,%ebp
  100013:	8b 45 08             	mov    0x8(%ebp),%eax
  100016:	d6                   	(bad)  
  100017:	eb fe                	jmp    100017 <_halt+0x7>
  100019:	66 90                	xchg   %ax,%ax
  10001b:	90                   	nop

0010001c <_trm_init>:
  10001c:	55                   	push   %ebp
  10001d:	89 e5                	mov    %esp,%ebp
  10001f:	83 ec 08             	sub    $0x8,%esp
  100022:	e8 21 00 00 00       	call   100048 <main>
  100027:	d6                   	(bad)  
  100028:	eb fe                	jmp    100028 <_trm_init+0xc>
  10002a:	66 90                	xchg   %ax,%ax

0010002c <nemu_assert>:
  10002c:	55                   	push   %ebp
  10002d:	89 e5                	mov    %esp,%ebp
  10002f:	8b 45 08             	mov    0x8(%ebp),%eax
  100032:	85 c0                	test   %eax,%eax
  100034:	74 02                	je     100038 <nemu_assert+0xc>
  100036:	5d                   	pop    %ebp
  100037:	c3                   	ret    
  100038:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%ebp)
  10003f:	5d                   	pop    %ebp
  100040:	e9 cb ff ff ff       	jmp    100010 <_halt>
  100045:	66 90                	xchg   %ax,%ax
  100047:	90                   	nop

00100048 <main>:
  100048:	8d 4c 24 04          	lea    0x4(%esp),%ecx
  10004c:	83 e4 f0             	and    $0xfffffff0,%esp
  10004f:	ff 71 fc             	pushl  -0x4(%ecx)
  100052:	55                   	push   %ebp
  100053:	89 e5                	mov    %esp,%ebp
  100055:	51                   	push   %ecx
  100056:	83 ec 10             	sub    $0x10,%esp
  100059:	c7 05 c0 01 10 00 00 	movl   $0x0,0x1001c0
  100060:	00 00 00 
  100063:	c7 05 c4 01 10 00 01 	movl   $0x1,0x1001c4
  10006a:	00 00 00 
  10006d:	c7 05 c8 01 10 00 02 	movl   $0x2,0x1001c8
  100074:	00 00 00 
  100077:	c7 05 cc 01 10 00 03 	movl   $0x3,0x1001cc
  10007e:	00 00 00 
  100081:	c7 05 d0 01 10 00 04 	movl   $0x4,0x1001d0
  100088:	00 00 00 
  10008b:	c7 05 a0 01 10 00 03 	movl   $0x3,0x1001a0
  100092:	00 00 00 
  100095:	c7 05 d4 01 10 00 03 	movl   $0x3,0x1001d4
  10009c:	00 00 00 
  10009f:	c6 05 e8 01 10 00 61 	movb   $0x61,0x1001e8
  1000a6:	6a 01                	push   $0x1
  1000a8:	e8 7f ff ff ff       	call   10002c <nemu_assert>
  1000ad:	a0 e8 01 10 00       	mov    0x1001e8,%al
  1000b2:	a2 e9 01 10 00       	mov    %al,0x1001e9
  1000b7:	3c 61                	cmp    $0x61,%al
  1000b9:	0f 94 c0             	sete   %al
  1000bc:	0f b6 c0             	movzbl %al,%eax
  1000bf:	89 04 24             	mov    %eax,(%esp)
  1000c2:	e8 65 ff ff ff       	call   10002c <nemu_assert>
  1000c7:	0f be 05 e8 01 10 00 	movsbl 0x1001e8,%eax
  1000ce:	a3 c0 01 10 00       	mov    %eax,0x1001c0
  1000d3:	83 f8 61             	cmp    $0x61,%eax
  1000d6:	0f 94 c0             	sete   %al
  1000d9:	0f b6 c0             	movzbl %al,%eax
  1000dc:	89 04 24             	mov    %eax,(%esp)
  1000df:	e8 48 ff ff ff       	call   10002c <nemu_assert>
  1000e4:	c6 05 e9 01 10 00 80 	movb   $0x80,0x1001e9
  1000eb:	c7 05 c0 01 10 00 80 	movl   $0xffffff80,0x1001c0
  1000f2:	ff ff ff 
  1000f5:	31 c0                	xor    %eax,%eax
  1000f7:	83 3d c4 01 10 00 01 	cmpl   $0x1,0x1001c4
  1000fe:	0f 94 c0             	sete   %al
  100101:	89 04 24             	mov    %eax,(%esp)
  100104:	e8 23 ff ff ff       	call   10002c <nemu_assert>
  100109:	31 c0                	xor    %eax,%eax
  10010b:	83 3d c8 01 10 00 02 	cmpl   $0x2,0x1001c8
  100112:	0f 94 c0             	sete   %al
  100115:	89 04 24             	mov    %eax,(%esp)
  100118:	e8 0f ff ff ff       	call   10002c <nemu_assert>
  10011d:	31 c0                	xor    %eax,%eax
  10011f:	83 3d cc 01 10 00 03 	cmpl   $0x3,0x1001cc
  100126:	0f 94 c0             	sete   %al
  100129:	89 04 24             	mov    %eax,(%esp)
  10012c:	e8 fb fe ff ff       	call   10002c <nemu_assert>
  100131:	31 c0                	xor    %eax,%eax
  100133:	83 3d d0 01 10 00 04 	cmpl   $0x4,0x1001d0
  10013a:	0f 94 c0             	sete   %al
  10013d:	89 04 24             	mov    %eax,(%esp)
  100140:	e8 e7 fe ff ff       	call   10002c <nemu_assert>
  100145:	31 c0                	xor    %eax,%eax
  100147:	83 3d a0 01 10 00 03 	cmpl   $0x3,0x1001a0
  10014e:	0f 94 c0             	sete   %al
  100151:	89 04 24             	mov    %eax,(%esp)
  100154:	e8 d3 fe ff ff       	call   10002c <nemu_assert>
  100159:	31 c0                	xor    %eax,%eax
  10015b:	83 3d d4 01 10 00 03 	cmpl   $0x3,0x1001d4
  100162:	0f 94 c0             	sete   %al
  100165:	89 04 24             	mov    %eax,(%esp)
  100168:	e8 bf fe ff ff       	call   10002c <nemu_assert>
  10016d:	31 c0                	xor    %eax,%eax
  10016f:	80 3d e9 01 10 00 80 	cmpb   $0x80,0x1001e9
  100176:	0f 94 c0             	sete   %al
  100179:	89 04 24             	mov    %eax,(%esp)
  10017c:	e8 ab fe ff ff       	call   10002c <nemu_assert>
  100181:	31 c0                	xor    %eax,%eax
  100183:	83 3d c0 01 10 00 80 	cmpl   $0xffffff80,0x1001c0
  10018a:	0f 94 c0             	sete   %al
  10018d:	89 04 24             	mov    %eax,(%esp)
  100190:	e8 97 fe ff ff       	call   10002c <nemu_assert>
  100195:	31 c0                	xor    %eax,%eax
  100197:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  10019a:	c9                   	leave  
  10019b:	8d 61 fc             	lea    -0x4(%ecx),%esp
  10019e:	c3                   	ret    
