
/home/Manfred/ics2017/nexus-am/tests/cputest/build/bit-x86-nemu：     文件格式 elf32-i386


Disassembly of section .text:

00100000 <_start>:
  100000:	bd 00 00 00 00       	mov    $0x0,%ebp
  100005:	bc 00 7c 00 00       	mov    $0x7c00,%esp
  10000a:	e8 0d 00 00 00       	call   10001c <_trm_init>
  10000f:	90                   	nop

00100010 <_halt>:
  100010:	55                   	push   %ebp
  100011:	89 e5                	mov    %esp,%ebp
  100013:	8b 45 08             	mov    0x8(%ebp),%eax
  100016:	d6                   	(bad)  
  100017:	eb fe                	jmp    100017 <_halt+0x7>
  100019:	66 90                	xchg   %ax,%ax
  10001b:	90                   	nop

0010001c <_trm_init>:
  10001c:	55                   	push   %ebp
  10001d:	89 e5                	mov    %esp,%ebp
  10001f:	83 ec 08             	sub    $0x8,%esp
  100022:	e8 89 00 00 00       	call   1000b0 <main>
  100027:	d6                   	(bad)  
  100028:	eb fe                	jmp    100028 <_trm_init+0xc>
  10002a:	66 90                	xchg   %ax,%ax

0010002c <nemu_assert>:
  10002c:	55                   	push   %ebp
  10002d:	89 e5                	mov    %esp,%ebp
  10002f:	8b 45 08             	mov    0x8(%ebp),%eax
  100032:	85 c0                	test   %eax,%eax
  100034:	74 02                	je     100038 <nemu_assert+0xc>
  100036:	5d                   	pop    %ebp
  100037:	c3                   	ret    
  100038:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%ebp)
  10003f:	5d                   	pop    %ebp
  100040:	e9 cb ff ff ff       	jmp    100010 <_halt>
  100045:	8d 76 00             	lea    0x0(%esi),%esi

00100048 <getbit>:
  100048:	55                   	push   %ebp
  100049:	89 e5                	mov    %esp,%ebp
  10004b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  10004e:	89 ca                	mov    %ecx,%edx
  100050:	c1 fa 03             	sar    $0x3,%edx
  100053:	83 e1 07             	and    $0x7,%ecx
  100056:	b8 01 00 00 00       	mov    $0x1,%eax
  10005b:	d3 e0                	shl    %cl,%eax
  10005d:	8b 4d 08             	mov    0x8(%ebp),%ecx
  100060:	84 04 11             	test   %al,(%ecx,%edx,1)
  100063:	0f 95 c0             	setne  %al
  100066:	5d                   	pop    %ebp
  100067:	c3                   	ret    

00100068 <setbit>:
  100068:	55                   	push   %ebp
  100069:	89 e5                	mov    %esp,%ebp
  10006b:	53                   	push   %ebx
  10006c:	83 ec 10             	sub    $0x10,%esp
  10006f:	8b 45 0c             	mov    0xc(%ebp),%eax
  100072:	89 c1                	mov    %eax,%ecx
  100074:	83 e1 07             	and    $0x7,%ecx
  100077:	ba 01 00 00 00       	mov    $0x1,%edx
  10007c:	d3 e2                	shl    %cl,%edx
  10007e:	89 d1                	mov    %edx,%ecx
  100080:	c1 f8 03             	sar    $0x3,%eax
  100083:	03 45 08             	add    0x8(%ebp),%eax
  100086:	89 45 f8             	mov    %eax,-0x8(%ebp)
  100089:	8b 55 f8             	mov    -0x8(%ebp),%edx
  10008c:	80 7d 10 00          	cmpb   $0x0,0x10(%ebp)
  100090:	74 0e                	je     1000a0 <setbit+0x38>
  100092:	8b 45 f8             	mov    -0x8(%ebp),%eax
  100095:	0a 08                	or     (%eax),%cl
  100097:	88 0a                	mov    %cl,(%edx)
  100099:	83 c4 10             	add    $0x10,%esp
  10009c:	5b                   	pop    %ebx
  10009d:	5d                   	pop    %ebp
  10009e:	c3                   	ret    
  10009f:	90                   	nop
  1000a0:	8b 5d f8             	mov    -0x8(%ebp),%ebx
  1000a3:	f7 d1                	not    %ecx
  1000a5:	22 0b                	and    (%ebx),%cl
  1000a7:	88 0a                	mov    %cl,(%edx)
  1000a9:	83 c4 10             	add    $0x10,%esp
  1000ac:	5b                   	pop    %ebx
  1000ad:	5d                   	pop    %ebp
  1000ae:	c3                   	ret    
  1000af:	90                   	nop

001000b0 <main>:
  1000b0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
  1000b4:	83 e4 f0             	and    $0xfffffff0,%esp
  1000b7:	ff 71 fc             	pushl  -0x4(%ecx)
  1000ba:	55                   	push   %ebp
  1000bb:	89 e5                	mov    %esp,%ebp
  1000bd:	53                   	push   %ebx
  1000be:	51                   	push   %ecx
  1000bf:	83 ec 10             	sub    $0x10,%esp
  1000c2:	c6 45 f6 aa          	movb   $0xaa,-0xa(%ebp)
  1000c6:	6a 00                	push   $0x0
  1000c8:	8d 5d f6             	lea    -0xa(%ebp),%ebx
  1000cb:	53                   	push   %ebx
  1000cc:	e8 77 ff ff ff       	call   100048 <getbit>
  1000d1:	52                   	push   %edx
  1000d2:	84 c0                	test   %al,%al
  1000d4:	0f 94 c0             	sete   %al
  1000d7:	0f b6 c0             	movzbl %al,%eax
  1000da:	50                   	push   %eax
  1000db:	e8 4c ff ff ff       	call   10002c <nemu_assert>
  1000e0:	59                   	pop    %ecx
  1000e1:	58                   	pop    %eax
  1000e2:	6a 01                	push   $0x1
  1000e4:	53                   	push   %ebx
  1000e5:	e8 5e ff ff ff       	call   100048 <getbit>
  1000ea:	fe c8                	dec    %al
  1000ec:	0f 94 c0             	sete   %al
  1000ef:	0f b6 c0             	movzbl %al,%eax
  1000f2:	89 04 24             	mov    %eax,(%esp)
  1000f5:	e8 32 ff ff ff       	call   10002c <nemu_assert>
  1000fa:	58                   	pop    %eax
  1000fb:	5a                   	pop    %edx
  1000fc:	6a 02                	push   $0x2
  1000fe:	53                   	push   %ebx
  1000ff:	e8 44 ff ff ff       	call   100048 <getbit>
  100104:	84 c0                	test   %al,%al
  100106:	0f 94 c0             	sete   %al
  100109:	0f b6 c0             	movzbl %al,%eax
  10010c:	89 04 24             	mov    %eax,(%esp)
  10010f:	e8 18 ff ff ff       	call   10002c <nemu_assert>
  100114:	59                   	pop    %ecx
  100115:	58                   	pop    %eax
  100116:	6a 03                	push   $0x3
  100118:	53                   	push   %ebx
  100119:	e8 2a ff ff ff       	call   100048 <getbit>
  10011e:	fe c8                	dec    %al
  100120:	0f 94 c0             	sete   %al
  100123:	0f b6 c0             	movzbl %al,%eax
  100126:	89 04 24             	mov    %eax,(%esp)
  100129:	e8 fe fe ff ff       	call   10002c <nemu_assert>
  10012e:	58                   	pop    %eax
  10012f:	5a                   	pop    %edx
  100130:	6a 04                	push   $0x4
  100132:	53                   	push   %ebx
  100133:	e8 10 ff ff ff       	call   100048 <getbit>
  100138:	84 c0                	test   %al,%al
  10013a:	0f 94 c0             	sete   %al
  10013d:	0f b6 c0             	movzbl %al,%eax
  100140:	89 04 24             	mov    %eax,(%esp)
  100143:	e8 e4 fe ff ff       	call   10002c <nemu_assert>
  100148:	59                   	pop    %ecx
  100149:	58                   	pop    %eax
  10014a:	6a 05                	push   $0x5
  10014c:	53                   	push   %ebx
  10014d:	e8 f6 fe ff ff       	call   100048 <getbit>
  100152:	fe c8                	dec    %al
  100154:	0f 94 c0             	sete   %al
  100157:	0f b6 c0             	movzbl %al,%eax
  10015a:	89 04 24             	mov    %eax,(%esp)
  10015d:	e8 ca fe ff ff       	call   10002c <nemu_assert>
  100162:	58                   	pop    %eax
  100163:	5a                   	pop    %edx
  100164:	6a 06                	push   $0x6
  100166:	53                   	push   %ebx
  100167:	e8 dc fe ff ff       	call   100048 <getbit>
  10016c:	84 c0                	test   %al,%al
  10016e:	0f 94 c0             	sete   %al
  100171:	0f b6 c0             	movzbl %al,%eax
  100174:	89 04 24             	mov    %eax,(%esp)
  100177:	e8 b0 fe ff ff       	call   10002c <nemu_assert>
  10017c:	59                   	pop    %ecx
  10017d:	58                   	pop    %eax
  10017e:	6a 07                	push   $0x7
  100180:	53                   	push   %ebx
  100181:	e8 c2 fe ff ff       	call   100048 <getbit>
  100186:	fe c8                	dec    %al
  100188:	0f 94 c0             	sete   %al
  10018b:	0f b6 c0             	movzbl %al,%eax
  10018e:	89 04 24             	mov    %eax,(%esp)
  100191:	e8 96 fe ff ff       	call   10002c <nemu_assert>
  100196:	83 c4 0c             	add    $0xc,%esp
  100199:	6a 01                	push   $0x1
  10019b:	6a 08                	push   $0x8
  10019d:	53                   	push   %ebx
  10019e:	e8 c5 fe ff ff       	call   100068 <setbit>
  1001a3:	83 c4 0c             	add    $0xc,%esp
  1001a6:	6a 00                	push   $0x0
  1001a8:	6a 09                	push   $0x9
  1001aa:	53                   	push   %ebx
  1001ab:	e8 b8 fe ff ff       	call   100068 <setbit>
  1001b0:	83 c4 0c             	add    $0xc,%esp
  1001b3:	6a 01                	push   $0x1
  1001b5:	6a 0a                	push   $0xa
  1001b7:	53                   	push   %ebx
  1001b8:	e8 ab fe ff ff       	call   100068 <setbit>
  1001bd:	83 c4 0c             	add    $0xc,%esp
  1001c0:	6a 00                	push   $0x0
  1001c2:	6a 0b                	push   $0xb
  1001c4:	53                   	push   %ebx
  1001c5:	e8 9e fe ff ff       	call   100068 <setbit>
  1001ca:	83 c4 0c             	add    $0xc,%esp
  1001cd:	6a 01                	push   $0x1
  1001cf:	6a 0c                	push   $0xc
  1001d1:	53                   	push   %ebx
  1001d2:	e8 91 fe ff ff       	call   100068 <setbit>
  1001d7:	83 c4 0c             	add    $0xc,%esp
  1001da:	6a 00                	push   $0x0
  1001dc:	6a 0d                	push   $0xd
  1001de:	53                   	push   %ebx
  1001df:	e8 84 fe ff ff       	call   100068 <setbit>
  1001e4:	83 c4 0c             	add    $0xc,%esp
  1001e7:	6a 01                	push   $0x1
  1001e9:	6a 0e                	push   $0xe
  1001eb:	53                   	push   %ebx
  1001ec:	e8 77 fe ff ff       	call   100068 <setbit>
  1001f1:	83 c4 0c             	add    $0xc,%esp
  1001f4:	6a 00                	push   $0x0
  1001f6:	6a 0f                	push   $0xf
  1001f8:	53                   	push   %ebx
  1001f9:	e8 6a fe ff ff       	call   100068 <setbit>
  1001fe:	31 c0                	xor    %eax,%eax
  100200:	80 7d f7 55          	cmpb   $0x55,-0x9(%ebp)
  100204:	0f 94 c0             	sete   %al
  100207:	89 04 24             	mov    %eax,(%esp)
  10020a:	e8 1d fe ff ff       	call   10002c <nemu_assert>
  10020f:	31 c0                	xor    %eax,%eax
  100211:	8d 65 f8             	lea    -0x8(%ebp),%esp
  100214:	59                   	pop    %ecx
  100215:	5b                   	pop    %ebx
  100216:	5d                   	pop    %ebp
  100217:	8d 61 fc             	lea    -0x4(%ecx),%esp
  10021a:	c3                   	ret    
